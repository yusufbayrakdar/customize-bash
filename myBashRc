# ----------------------------------
# ---------Configure Prompt---------
# ----------------------------------
if [ -z "$PS1" ]; then
   return
fi
tput reset
echo Welcome to$(echo -en '\033[00;31m') Terminal
parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
bind 'set completion-ignore-case on'        # Disable Case Sensitivty
export PS1=$'\[\033[32m\]\h \xe2\x96\xb6 \[\033[33;1m\]\w`if [ $? = 0 ]; then echo "\[\033[01;32m\]$(parse_git_branch) ツ \xe2\x96\xb6"; else echo "\[\033[01;31m\]$(parse_git_branch) ¯\_(ツ)_/¯ \xe2\x96\xb6"; fi`\[\033[m\] '
export CLICOLOR=1
export LSCOLORS=Dxexbxgxcxegedabagacad
export BASH_SILENCE_DEPRECATION_WARNING=1   # To orevent zsh give warnings

# Make bash check its window size after a process completes
    shopt -s checkwinsize

    [ -r "/etc/bashrc_$TERM_PROGRAM" ] ;  . "/etc/bashrc_$TERM_PROGRAM"
# --------------------------------
# ----- Make Terminal Better -----
# --------------------------------
# -------------Aliases------------
    alias getdw='mv /Users/$USER/Downloads/* /Users/$USER/Desktop'
    alias cpwd="pwd | tr -d '\n' | pbcopy && echo 'pwd copied to clipboard'"
    alias o='open'
    alias grep="grep --color=always"
    alias l='du -sh *'
    alias hexread='hexdump -C '
    alias ls='ls -rhS'
    alias ll='ls -lrhS'
    alias gr='grep --color=always -in'
    alias r='cd /'                              # Go root
    alias p='cd -'                              # Go previous directory
    alias cd..='cd ../'                         # Go back 1 directory level (for fast typers)
    alias ..='cd ../'                           # Go back 1 directory level
    alias ...='cd ../../'                       # Go back 2 directory levels
    alias .3='cd ../../../'                     # Go back 3 directory levels
    alias .4='cd ../../../../'                  # Go back 4 directory levels
    alias .5='cd ../../../../../'               # Go back 5 directory levels
    alias .6='cd ../../../../../../'            # Go back 6 directory levels
    alias f='open -a Finder ./'                 # f:            Opens current directory in MacOS Finder
    alias show='alias | grep --color=always'    # to remind yourself of an alias (given some part of it)
    alias showoptions='shopt'                   # Show_options: display bash options settings
    alias zipf='zip -r'
    alias vs='open -a "Visual Studio Code"'
    alias rm="rm -rf "
    alias cb="sudo rm /etc/.myBashRc.swp;sudo vim /etc/myBashRc"                       # open myBashRc with vim
    alias dw="cd /Users/$USER/Downloads"
    alias d="cd /Users/$USER/Desktop"
    alias bn="cd /usr/local/bin"
    alias p="cd -"
    alias et='cd /etc'
    alias c=clear
# -------------Functions------------
    mcd () { mkdir -p "$1" && cd "$1"; }        # mcd:          Makes new Dir and jumps inside
    trash () { command mv "$@" ~/.Trash ; }     # trash:        Moves a file to the MacOS trash
    tt(){ /usr/bin/touch "$@" ;ls |grep -C 2 --color=always -n "$@";}
    rd(){ cat -n $1|sed -n "$2","$3"p; }        # read file between 2 lines 
    v(){ /usr/bin/vim "$@";}
    cd() { builtin cd "$@"; ls -rhS; }          # Always list directory contents upon 'cd'
    go() {
        search=""
        echo "Googling: $@"
        for term in $@; do
            search="$search%20$term"
        done
        open "http://www.google.com/search?q=$search"
    }
    youtube() {
        search=""
        echo "Youtubing: $@"
        for term in $@; do
            search="$search%20$term"
        done
        open "http://www.youtube.com/search?q=$search"
    }
# ----Variables To Be Fast----
    ds=/Users/$USER/Desktop/        # For example : cp file $ds 
    dw=/Users/$USER/Downloads       # For example : mv file $dw
    bn=/usr/local/bin

#   -------------------------------
#   3. FILE AND FOLDER MANAGEMENT
#   -------------------------------
# zipf () { zip -r "$1".zip "$1" ; }          # zipf:         To create a ZIP archive of a folder
#   extract:  Extract most known archives with one command
#   ---------------------------------------------------------
    extract () {
        if [ -f $1 ] ; then
          case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
	    *)     echo "'$1' cannot be extracted via extract()" ;;
             esac
         else
             echo "'$1' is not a valid file"
         fi
    }
#   ---------------------------
#   4. SEARCHING
#   ---------------------------

    ff () { /usr/bin/find . -name "$@" 2>&1 | grep -v "find:*"|grep --color=always $@; }        # ff:       Find file under the current directory
    fse (){ /usr/bin/find . -name '*'"$@"'*' 2>&1 | grep -v "find:*"|grep --color=always $@; }  # ffs:      Find file whose name is like the given string

#   ---------------------------
#   5. PROCESS MANAGEMENT
#   ---------------------------
    killport () { kill -9 $(lsof -i:"$1" -t); }                                 # kill processes listening on port $1
    findpid () { lsof -t -c "$@" ; }                                            # findpid: find out the pid of a specified process
    my_ps() { ps $@ -u $USER -o pid,%cpu,%mem,start,time,bsdtime,command ; }    # my_ps: List processes owned by my user:

#   ---------------------------
#   6. NETWORKING
#   ---------------------------

#   Local IP
    ip(){
        ifconfig |grep --color=always -x '.\{61,64\}'|grep --color=always inet|grep --color=always netmask |cut -d 't' -f 2 |cut -d'n' -f 1|cut -d' ' -f2
    }
    alias gip='curl http://ipecho.net/plain; echo'                      # gip: Global IP Address
    alias openports='sudo lsof -i | grep --color=always LISTEN'         # openports:    All listening connections